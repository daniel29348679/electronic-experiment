$date
	Tue Mar 05 16:13:21 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TM_AddSub4 $end
$scope module AddSub4 $end
$var wire 4 ! a [3:0] $end
$var wire 4 " b [3:0] $end
$var wire 1 # sel $end
$var wire 4 $ sum [3:0] $end
$var wire 1 % cout $end
$var wire 5 & c [4:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ' i $end
$scope module fa $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 * cin $end
$var wire 1 + sum $end
$var wire 1 , cout $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 - i $end
$scope module fa $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 cin $end
$var wire 1 1 sum $end
$var wire 1 2 cout $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 3 i $end
$scope module fa $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 sum $end
$var wire 1 8 cout $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 9 i $end
$scope module fa $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < cin $end
$var wire 1 = sum $end
$var wire 1 > cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 9
b10 3
b1 -
b0 '
$end
#0
$dumpvars
x>
x=
x<
x;
x:
x8
x7
x6
x5
x4
x2
x1
x0
x/
x.
x,
x+
x*
x)
x(
bx &
x%
bx $
x#
bx "
bx !
$end
#10000
0%
0=
0>
0<
17
08
06
11
02
10
b110 $
0+
1,
0*
1)
0/
05
0;
1(
0.
14
0:
b10 &
0#
b1 "
b101 !
#20000
1%
1>
16
1<
01
12
17
18
b100 $
0=
1*
0)
1/
15
1;
b11111 &
1#
#30000
07
06
0<
0%
00
01
02
08
b0 $
0=
0>
0,
0*
0/
05
0;
0(
04
b0 &
0#
b0 "
b0 !
#40000
1%
1>
1<
18
16
12
10
1,
01
07
b0 $
0=
1*
1)
1/
15
1;
b11111 &
1#
#50000
00
0<
0%
0,
17
08
0=
0>
b100 $
01
0*
0)
05
0;
1.
b100 &
0#
b10 "
b10 !
#60000
1%
1>
10
16
1<
1,
01
12
07
18
b0 $
0=
1*
1)
0/
15
1;
b11111 &
1#
#70000
0<
17
08
0%
06
0=
0>
b110 $
11
02
0*
0;
1(
0.
b10 &
0#
b101 "
b1 !
#80000
16
01
12
17
b1100 $
1=
1*
0)
1/
05
1;
b111 &
1#
#90000
